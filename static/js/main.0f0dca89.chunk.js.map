{"version":3,"sources":["assets/noPosterSmall.png","api.js","Components/Section.js","Components/Loader.js","Components/Message.js","Components/Poster.js","Routes/Home/HomePresenter.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Components/Casting.js","Components/Crew.js","Components/Company.js","Components/Country.js","Components/Video.js","Components/Series.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Components/Header.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["api","axios","create","baseURL","params","api_key","language","moviesApi","get","id","append_to_response","term","query","encodeURIComponent","tvApi","Container","styled","div","Title","span","Grid","Section","title","children","Loader","class","style","position","top","left","transform","color","height","width","Text","props","Message","text","Image","bgUrl","Rating","ImageContainer","Year","Poster","imageUrl","rating","year","isMovie","to","role","aria-label","length","substring","HomePresenter","nowPlaying","popular","upcoming","loading","error","Helmet","map","movie","poster_path","original_title","vote_average","release_date","HomeContainer","state","data","results","this","setState","React","Component","Form","form","Input","input","SearchPresenter","movieResults","tvResults","searchTerm","handleSubmit","updateTerm","onSubmit","placeholder","value","onChange","show","name","first_air_date","SearchContainer","event","preventDefault","searchByTerm","target","a","TVPresenter","topRated","airingToday","original_name","TVContainer","Header","CastContainer","Name","CastItem","Casting","casts","slice","cast","profile_path","cast_id","CrewContainer","CrewItem","Crews","crews","crew","credit_id","CompaniesContainer","CompaniesItem","Company","companies","com","logo_path","CountriesContainer","CountriesItem","Countries","countries","coun","iso_3166_1","VideoContainer","Video","videoKey","src","allow","allowFullScreen","SeriesContainer","SeriesItem","Series","series","s","backdropAnim","keyframes","Backdrop","bgImage","Content","showAnim","Cover","Data","h3","MovieInfoContainer","MovieInfomation","Divider","Overview","p","IMDB","IMDBImg","img","TabContainer","Tab","Link","current","withRouter","location","match","result","credit","backdrop_path","require","runtime","episode_run_time","genres","genre","index","imdb_id","href","overview","pathname","includes","toString","url","path","exact","videos","vid","key","Crew","production_companies","production_countries","Country","seasons","DetailContainer","push","history","parsedId","parseInt","isNaN","creditData","header","List","ul","Item","li","SLink","className","component","Home","Search","TV","Detail","from","globalStyles","createGlobalStyle","reset","App","Router","GlobalStyles","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0f0dca89.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/noPosterSmall.ea2ad102.png\";","import axios from \"axios\";\n\nconst api = axios.create({\n  baseURL: \"https://api.themoviedb.org/3/\",\n  params: {\n    api_key: \"c44bcd2c30bdd8361a44243773d49b6f\",\n    language: \"en-US\",\n  },\n});\n\nexport const moviesApi = {\n  nowPlaying: () => api.get(\"movie/now_playing\"),\n  upcoming: () => api.get(\"movie/upcoming\"),\n  popular: () => api.get(\"movie/popular\"),\n  credits: (id) => api.get(`movie/${id}/credits`),\n  movieDetail: (id) =>\n    api.get(`movie/${id}`, {\n      params: {\n        append_to_response: \"videos\",\n      },\n    }),\n  search: (term) =>\n    api.get(\"search/movie\", {\n      params: {\n        query: encodeURIComponent(term), //특수문자나 스페이스 등을 인코딩 하는 과정이 꼭 필요!,\n      },\n    }),\n};\n\nexport const tvApi = {\n  topRated: () => api.get(\"tv/top_rated\"),\n  popular: () => api.get(\"tv/popular\"),\n  airingToday: () => api.get(\"tv/airing_today\"),\n  credits: (id) => api.get(`tv/${id}/credits`),\n  showDetail: (id) =>\n    api.get(`tv/${id}`, {\n      params: {\n        append_to_response: \"videos\",\n      },\n    }),\n  search: (term) =>\n    api.get(\"search/tv\", {\n      params: {\n        query: encodeURIComponent(term), // params를 query를 요구했는데 term을 정의해줘서 에러 발생!\n      },\n    }),\n};\n\nexport default api;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  :not(:last-child) {\n    margin-bottom: 50px;\n  }\n`;\n\nconst Title = styled.span`\n  font-size: 14px;\n  font-weight: 600;\n`;\n\nconst Grid = styled.div`\n  margin-top: 25px;\n  display: grid;\n  grid-template-columns: repeat(auto-fill, 125px);\n  grid-gap: 25px;\n`;\n\nconst Section = ({ title, children }) => (\n  <Container>\n    <Title>{title}</Title>\n    <Grid>{children}</Grid>\n  </Container>\n);\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]),\n};\n\nexport default Section;\n","import React from \"react\";\nimport ReactLoading from \"react-loading\";\n\nfunction Loader() {\n  return (\n    <div class=\"contentWrap\">\n      {\" \"}\n      <div\n        style={{\n          position: \"fixed\",\n          top: \"50%\",\n          left: \"50%\",\n          transform: \"translate(-50%, -50%)\",\n        }}\n      >\n        <h2>Waiting</h2>{\" \"}\n        <ReactLoading color={\"white\"} height={\"80%\"} width={\"80%\"} />{\" \"}\n      </div>{\" \"}\n    </div>\n  );\n}\nexport default Loader;\n","import React from \"react\";\nimport PropType from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n  padding-top: 200px;\n`;\n\nconst Text = styled.span`\n  color: ${(props) => props.color};\n  font-size: 16px;\n`;\n\nconst Message = ({ text, color }) => (\n  <Container>\n    <Text color={color}>{text}</Text>\n  </Container>\n);\n\nMessage.propTypes = {\n  text: PropType.string.isRequired,\n};\n\nexport default Message;\n","import React from \"react\";\nimport Proptypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  font-size: 12px;\n`;\n\nconst Image = styled.div`\n  background-image: url(${(props) => props.bgUrl});\n  height: 180px;\n  background-size: cover;\n  background-position: center center;\n  border-radius: 5px;\n  transition: opacity 0.1s linear;\n`;\n\nconst Rating = styled.span`\n  position: absolute;\n  bottom: 10px;\n  right: 5px;\n  opacity: 0;\n`;\n\nconst ImageContainer = styled.div`\n  margin-bottom: 5px;\n  position: relative;\n  &:hover {\n    ${Image} {\n      opacity: 0.3;\n    }\n    ${Rating} {\n      opacity: 1;\n    }\n  }\n  transition: opacity 0.1s linear;\n`;\n\nconst Title = styled.span`\n  display: block;\n  margin-bottom: 3px;\n`;\n\nconst Year = styled.span``;\n\nconst Poster = ({ id, imageUrl, title, rating, year, isMovie = false }) => (\n  <Link to={isMovie ? `/movie/${id}` : `/tv/${id}`}>\n    <Container>\n      <ImageContainer>\n        <Image\n          bgUrl={\n            imageUrl\n              ? `https://image.tmdb.org/t/p/w300${imageUrl}`\n              : \"https://kknd26.ru/images/no-photo-nevinka.png\"\n          }\n        />\n        <Rating>\n          <span role=\"img\" aria-label=\"rating\">\n            ⭐️\n          </span>{\" \"}\n          {rating} / 10\n        </Rating>\n      </ImageContainer>\n      <Title>\n        {title.length > 15 ? `${title.substring(0, 16)}...` : title}\n      </Title>\n      <Year>{year}</Year>\n    </Container>\n  </Link>\n);\n\nPoster.propTypes = {\n  id: Proptypes.number.isRequired,\n  imageUrl: Proptypes.string,\n  title: Proptypes.string.isRequired,\n  rating: Proptypes.number,\n  year: Proptypes.string,\n  isMovie: Proptypes.bool,\n};\n\nexport default Poster;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport Section from \"Components/Section\";\nimport Loader from \"Components/Loader\";\nimport Message from \"Components/Message\";\nimport Poster from \"Components/Poster\";\n\nconst Container = styled.div`\n  padding: 20px;\n`;\nconst HomePresenter = ({ nowPlaying, popular, upcoming, loading, error }) => (\n  <>\n    {loading ? (\n      <Loader />\n    ) : (\n      <Container>\n        <Helmet>\n          <title>Movies | Hyeokflix</title>\n        </Helmet>\n        {nowPlaying && nowPlaying.length > 0 && (\n          <Section title=\"Now Playing\">\n            {nowPlaying.map((movie) => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                imageUrl={movie.poster_path}\n                title={movie.original_title}\n                rating={movie.vote_average}\n                year={movie.release_date && movie.release_date.substring(0, 4)}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {upcoming && upcoming.length > 0 && (\n          <Section title=\"Upcoming Movie\">\n            {upcoming.map((movie) => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                imageUrl={movie.poster_path}\n                title={movie.original_title}\n                rating={movie.vote_average}\n                year={movie.release_date && movie.release_date.substring(0, 4)}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {popular && popular.length > 0 && (\n          <Section title=\"Popular Movie\">\n            {popular.map((movie) => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                imageUrl={movie.poster_path}\n                title={movie.original_title}\n                rating={movie.vote_average}\n                year={movie.release_date && movie.release_date.substring(0, 4)}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {error && <Message color=\"#e743c3\" text={error}></Message>}\n      </Container>\n    )}\n  </>\n);\n\nHomePresenter.propTypes = {\n  nowPlaying: PropTypes.array,\n  popular: PropTypes.array,\n  upcoming: PropTypes.array,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string,\n};\n\nexport default HomePresenter;\n","import HomeContainer from \"./HomeContainer\";\n\nexport default HomeContainer;\n","import { moviesApi } from \"api\";\nimport React from \"react\";\nimport HomePresenter from \"./HomePresenter\";\n\nexport default class extends React.Component {\n  state = {\n    nowPlaying: null,\n    upcoming: null,\n    popular: null,\n    error: null,\n    loading: true,\n  };\n\n  async componentDidMount() {\n    try {\n      const {\n        data: { results: nowPlaying },\n      } = await moviesApi.nowPlaying();\n      const {\n        data: { results: upcoming },\n      } = await moviesApi.upcoming();\n      const {\n        data: { results: popular },\n      } = await moviesApi.popular();\n      this.setState({\n        nowPlaying,\n        upcoming,\n        popular,\n      });\n    } catch {\n      this.setState({\n        error: \"Can't find the Moive Infomation.\",\n      });\n    } finally {\n      this.setState({\n        loading: false,\n      });\n    }\n  }\n  render() {\n    const { nowPlaying, upcoming, popular, error, loading } = this.state; // object destructing\n    return (\n      <HomePresenter\n        nowPlaying={nowPlaying}\n        upcoming={upcoming}\n        popular={popular}\n        error={error}\n        loading={loading}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Loader from \"Components/Loader\";\nimport Section from \"Components/Section\";\nimport Message from \"Components/Message\";\nimport Poster from \"Components/Poster\";\nimport { Helmet } from \"react-helmet\";\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst Form = styled.form`\n  display: inline-block;\n  margin-bottom: 50px;\n  width: 40%;\n`;\n\nconst Input = styled.input`\n  all: unset;\n  width: 100%;\n  font-size: 26px;\n`;\n\nconst SearchPresenter = ({\n  movieResults,\n  tvResults,\n  searchTerm,\n  error,\n  loading,\n  handleSubmit,\n  updateTerm,\n}) => (\n  <Container>\n    <Helmet>\n      <title>Search | Hyeokflix</title>\n    </Helmet>\n    <Form onSubmit={handleSubmit}>\n      <Input\n        placeholder=\"Search Movie of TV Shows...\"\n        value={searchTerm}\n        onChange={updateTerm}\n      ></Input>\n    </Form>\n    {loading ? (\n      <Loader />\n    ) : (\n      <>\n        {movieResults && movieResults.length > 0 && (\n          <Section title=\"Movie Results\">\n            {movieResults.map((movie) => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                imageUrl={movie.poster_path}\n                title={movie.original_title}\n                rating={movie.vote_average}\n                year={movie.release_date && movie.release_date.substring(0, 4)}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {tvResults && tvResults.length > 0 && (\n          <Section title=\"TV Shows Results\">\n            {tvResults.map((show) => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                imageUrl={show.poster_path}\n                title={show.name}\n                rating={show.vote_average}\n                year={\n                  show.first_air_date && show.first_air_date.substring(0, 4)\n                }\n                isMovie={false}\n              />\n            ))}\n          </Section>\n        )}\n      </>\n    )}\n    {error && <Message color=\"#e743c3\" text={error}></Message>}\n    {movieResults &&\n      tvResults &&\n      movieResults.length === 0 &&\n      tvResults.length === 0 && (\n        <Message text=\"검색 결과를 찾을 수 없습니다.\" color=\"#95a5a6\" />\n      )}\n  </Container>\n);\n\nSearchPresenter.propTypes = {\n  movieResults: PropTypes.array,\n  tvResults: PropTypes.array,\n  searchTerm: PropTypes.string,\n  error: PropTypes.string,\n  loading: PropTypes.bool.isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n  updateTerm: PropTypes.func.isRequired,\n};\n\nexport default SearchPresenter;\n","import SearchContainer from \"./SearchContainer\";\n\nexport default SearchContainer;\n","import { moviesApi, tvApi } from \"api\";\nimport React from \"react\";\nimport SearchPresenter from \"./SearchPresenter\";\n\nexport default class extends React.Component {\n  state = {\n    movieResults: null,\n    tvResults: null,\n    searchTerm: \"\", //searchTerm을 업데이트하는 함수는 추후에 작성 예정!\n    error: null,\n    loading: false,\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const { searchTerm } = this.state;\n    if (searchTerm !== \"\") {\n      this.searchByTerm();\n    }\n  };\n\n  updateTerm = (event) => {\n    // searchTerm 업데이트 함수\n    const {\n      target: { value },\n    } = event;\n    this.setState({\n      searchTerm: value,\n    });\n  };\n\n  searchByTerm = async () => {\n    const { searchTerm } = this.state;\n    this.setState({ loading: true });\n    try {\n      const {\n        data: { results: movieResults },\n      } = await moviesApi.search(searchTerm);\n      const {\n        data: { results: tvResults },\n      } = await tvApi.search(searchTerm);\n      this.setState({\n        movieResults,\n        tvResults,\n      });\n    } catch {\n      this.setState({\n        error: \"Can't find the results\",\n      });\n    } finally {\n      this.setState({\n        loading: false,\n      });\n    }\n  };\n\n  render() {\n    const { movieResults, tvResults, searchTerm, error, loading } = this.state;\n    return (\n      <SearchPresenter\n        movieResults={movieResults}\n        tvResults={tvResults}\n        error={error}\n        loading={loading}\n        searchTerm={searchTerm}\n        handleSubmit={this.handleSubmit} // 사용자가 form을 제출하면 handleSubmit 함수를 호출 => SearchPresenter에서 작성\n        updateTerm={this.updateTerm}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Section from \"Components/Section\";\nimport Loader from \"Components/Loader\";\nimport Message from \"Components/Message\";\nimport Poster from \"Components/Poster\";\nimport { Helmet } from \"react-helmet\";\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst TVPresenter = ({ topRated, popular, airingToday, loading, error }) => (\n  <>\n    {loading ? (\n      <Loader />\n    ) : (\n      <Container>\n        <Helmet>\n          <title>TV Shows | Hyeokflix</title>\n        </Helmet>\n        {topRated && topRated.length > 0 && (\n          <Section title=\"Top Rated Shows\">\n            {topRated.map((show) => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                imageUrl={show.poster_path}\n                title={show.name}\n                rating={show.vote_average}\n                year={\n                  show.first_air_date && show.first_air_date.substring(0, 4)\n                }\n                isMovie={false}\n              />\n            ))}\n          </Section>\n        )}\n        {popular && popular.length > 0 && (\n          <Section title=\"Popular TV Shows\">\n            {popular.map((show) => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                imageUrl={show.poster_path}\n                title={show.original_name}\n                rating={show.vote_average}\n                year={\n                  show.first_air_date && show.first_air_date.substring(0, 4)\n                }\n                isMovie={false}\n              />\n            ))}\n          </Section>\n        )}\n        {airingToday && airingToday.length > 0 && (\n          <Section title=\"Today TV Shows\">\n            {airingToday.map((show) => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                imageUrl={show.poster_path}\n                title={show.original_name}\n                rating={show.vote_average}\n                year={\n                  show.first_air_date && show.first_air_date.substring(0, 4)\n                }\n                isMovie={false}\n              />\n            ))}\n          </Section>\n        )}\n        {error && <Message color=\"#e743c3\" text={error}></Message>}\n      </Container>\n    )}\n  </>\n);\n\nTVPresenter.propTypes = {\n  topRated: PropTypes.array,\n  popular: PropTypes.array,\n  airingToday: PropTypes.array,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string,\n};\n\nexport default TVPresenter;\n","import TVContainer from \"./TVContainer\";\n\nexport default TVContainer;\n","import { tvApi } from \"api\";\nimport React from \"react\";\nimport TVPresenter from \"./TVPresenter\";\n\nexport default class extends React.Component {\n  state = {\n    topRated: null,\n    popular: null,\n    airingToday: null,\n    error: null,\n    loading: true,\n  };\n\n  // name이 같을 필요는 없지만 같은게 편하기 때문에 똑같은 name 사용!\n  async componentDidMount() {\n    try {\n      const {\n        data: { results: topRated },\n      } = await tvApi.topRated();\n      const {\n        data: { results: popular },\n      } = await tvApi.popular();\n      const {\n        data: { results: airingToday },\n      } = await tvApi.airingToday();\n      this.setState({\n        topRated,\n        popular,\n        airingToday,\n      });\n    } catch {\n      this.setState({\n        error: \"Can't find the TV Information.\",\n      });\n    } finally {\n      this.setState({\n        loading: false,\n      });\n    }\n  }\n  render() {\n    const { topRated, popular, airingToday, error, loading } = this.state;\n    return (\n      <TVPresenter\n        topRated={topRated}\n        popular={popular}\n        airingToday={airingToday}\n        error={error}\n        loading={loading}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\n\nconst Header = styled.div`\n  margin-top: 50px;\n  font-size: 24px;\n  color: white;\n`;\n\nconst CastContainer = styled.div`\n  width: 100%;\n  margin: 30px auto;\n  display: grid;\n  grid-gap: 10px;\n  grid-template-columns: repeat(auto-fill, 120px);\n  grid-auto-rows: 200px;\n`;\n\nconst Name = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translateX(-50%) translateY(-50%);\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: white;\n  font-size: 10px;\n\n  width: 100%;\n  height: 100%;\n\n  background-color: rgba(0, 0, 0, 0.7);\n  opacity: 0;\n  transition: 0.3s ease-in-out;\n`;\n\nconst CastItem = styled.div`\n  background: ${(props) => `url(${props.bgUrl})`};\n  background-size: cover;\n  background-position: center center;\n  background-repeat: no-repeat;\n  position: relative;\n\n  border-radius: 10px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: white;\n\n  &:hover {\n    ${Name} {\n      opacity: 1;\n    }\n  }\n`;\n\nconst Casting = ({ casts }) => {\n  return (\n    <>\n      <Header>Casting</Header>\n      <CastContainer>\n        {casts.slice(0, 13).map((cast) => (\n          <CastItem\n            key={cast.cast_id}\n            bgUrl={\n              cast.profile_path\n                ? `https://image.tmdb.org/t/p/w200${cast.profile_path}`\n                : \"https://kknd26.ru/images/no-photo-nevinka.png\"\n            }\n          >\n            <Name>{cast.name}</Name>\n          </CastItem>\n        ))}\n        {casts.length >= 14 && (\n          <CastItem>{`And ${casts.length - 14} more`}</CastItem>\n        )}\n      </CastContainer>\n    </>\n  );\n};\n\nCasting.propTypes = {\n  casts: PropTypes.arrayOf(\n    PropTypes.shape({\n      cast_id: PropTypes.number,\n      character: PropTypes.string,\n      credit_id: PropTypes.string,\n      gender: PropTypes.number,\n      id: PropTypes.number,\n      name: PropTypes.string,\n      order: PropTypes.number,\n      profile_path: PropTypes.string,\n    })\n  ),\n};\n\nexport default Casting;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\n\nconst Header = styled.div`\n  margin-top: 20px;\n  font-size: 24px;\n  color: white;\n`;\n\nconst CrewContainer = styled.div`\n  width: 100%;\n  margin: 50px auto;\n  display: grid;\n  grid-gap: 10px;\n  grid-template-columns: repeat(auto-fill, 120px);\n  grid-auto-rows: 200px;\n`;\n\nconst Name = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translateX(-50%) translateY(-50%);\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: white;\n  font-size: 10px;\n\n  width: 100%;\n  height: 100%;\n\n  background-color: rgba(0, 0, 0, 0.7);\n  opacity: 0;\n  transition: 0.3s ease-in-out;\n`;\n\nconst CrewItem = styled.div`\n  background: ${(props) => `url(${props.bgUrl})`};\n  background-size: cover;\n  background-position: center center;\n  background-repeat: no-repeat;\n  position: relative;\n\n  border-radius: 10px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: white;\n\n  &:hover {\n    ${Name} {\n      opacity: 1;\n    }\n  }\n`;\n\nconst Crews = ({ crews }) => {\n  return (\n    <>\n      <Header>Crews</Header>\n      <CrewContainer>\n        {crews.slice(0, 13).map((crew) => (\n          <CrewItem\n            key={crew.credit_id}\n            bgUrl={\n              crew.profile_path\n                ? `https://image.tmdb.org/t/p/w200${crew.profile_path}`\n                : \"https://kknd26.ru/images/no-photo-nevinka.png\"\n            }\n          >\n            <Name>{crew.name}</Name>\n          </CrewItem>\n        ))}\n        {crews.length >= 14 && (\n          <CrewItem>{`And ${crews.length - 14} more`}</CrewItem>\n        )}\n      </CrewContainer>\n    </>\n  );\n};\n\nCrews.propTypes = {\n  crews: PropTypes.arrayOf(\n    PropTypes.shape({\n      credit_id: PropTypes.string,\n      department: PropTypes.string,\n      gender: PropTypes.number,\n      id: PropTypes.number,\n      name: PropTypes.string,\n      job: PropTypes.string,\n      profile_path: PropTypes.string,\n    })\n  ),\n};\nexport default Crews;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\n\nconst Header = styled.div`\n  margin-top: 50px;\n  font-size: 24px;\n  color: white;\n`;\n\nconst CompaniesContainer = styled.div`\n  width: 100%;\n  margin: 30px auto;\n  display: grid;\n  grid-gap: 10px;\n  grid-template-columns: repeat(auto-fill, 120px);\n  grid-auto-rows: 200px;\n`;\n\nconst Name = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translateX(-50%) translateY(-50%);\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: white;\n  font-size: 10px;\n\n  width: 100%;\n  height: 100%;\n\n  background-color: rgba(0, 0, 0, 0.7);\n  opacity: 0;\n  transition: 0.3s ease-in-out;\n`;\n\nconst CompaniesItem = styled.div`\n  background: ${(props) => `url(${props.bgUrl})`};\n  background-size: cover;\n  background-position: center center;\n  background-repeat: no-repeat;\n  position: relative;\n\n  border-radius: 10px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: white;\n\n  &:hover {\n    ${Name} {\n      opacity: 1;\n    }\n  }\n`;\n\nconst Company = ({ companies }) => {\n  return (\n    <>\n      {companies && (\n        <>\n          <Header>Production Company</Header>\n          <CompaniesContainer>\n            {companies.map((com) => (\n              <CompaniesItem\n                key={com.id}\n                bgUrl={\n                  com.logo_path\n                    ? `https://image.tmdb.org/t/p/w300${com.logo_path}`\n                    : \"https://kknd26.ru/images/no-photo-nevinka.png\"\n                }\n              >\n                <Name>{com.name}</Name>\n              </CompaniesItem>\n            ))}\n          </CompaniesContainer>\n        </>\n      )}\n    </>\n  );\n};\n\nCompany.propTypes = {\n  companies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number,\n      logo_path: PropTypes.string,\n      name: PropTypes.string,\n      origin_country: PropTypes.string,\n    })\n  ),\n};\n\nexport default Company;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\n\nconst Header = styled.div`\n  margin-top: 50px;\n  font-size: 24px;\n  color: white;\n`;\n\nconst CountriesContainer = styled.div`\n  margin-top: 20px;\n  margin-bottom: 100px;\n  width: 100%;\n  display: flex;\n`;\n\nconst CountriesItem = styled.div`\n  width: fit-content;\n  padding: 5px 10px;\n  background: #e74c3c;\n  color: white;\n  margin-right: 10px;\n  margin-bottom: 100px;\n`;\n\nconst Countries = ({ countries }) => {\n  return (\n    <>\n      {countries && (\n        <>\n          <Header>Production Country</Header>\n          <CountriesContainer>\n            {countries.map((coun) => (\n              <CountriesItem key={coun.iso_3166_1}>{coun.name}</CountriesItem>\n            ))}\n          </CountriesContainer>\n        </>\n      )}\n    </>\n  );\n};\n\nCountries.propTypes = {\n  countries: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string,\n      iso_3166_1: PropTypes.string,\n    })\n  ),\n};\n\nexport default Countries;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport Message from \"Components/Message\";\n\nconst VideoContainer = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  margin-top: 50px;\n  margin-bottom: 100px;\n`;\n\nconst Video = ({ videoKey }) => {\n  return videoKey && videoKey.length > 0 ? (\n    <VideoContainer>\n      <iframe\n        title=\"trailer\"\n        src={`https://youtube.com/embed/${videoKey}`}\n        width=\"100%\"\n        height=\"800px\"\n        allow=\"accelerometer; encrypted-media; gyroscope; picture-in-picture\"\n        allowFullScreen\n      />\n    </VideoContainer>\n  ) : (\n    <Message text={\"Related Video not found\"} color=\"#e74c3c\" />\n  );\n};\n\nVideo.propTypes = {\n  videoKey: PropTypes.string.isRequired,\n};\n\nexport default Video;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\n\nconst Header = styled.div`\n  font-size: 24px;\n  margin-top: 50px;\n`;\n\nconst SeriesContainer = styled.div`\n  width: 100%;\n  margin: 50px auto;\n  display: grid;\n  grid-gap: 20px;\n  grid-template-columns: repeat(auto-fill, 180px);\n  grid-auto-rows: 260px;\n`;\n\nconst Name = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translateX(-50%) translateY(-50%);\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: white;\n  font-size: 10px;\n\n  width: 100%;\n  height: 100%;\n\n  background-color: rgba(0, 0, 0, 0.7);\n  opacity: 0;\n  transition: 0.3s ease-in-out;\n`;\n\nconst SeriesItem = styled.div`\n  background: ${(props) => `url(${props.bgUrl})`};\n  background-size: cover;\n  background-position: center center;\n  background-repeat: no-repeat;\n  position: relative;\n  border-radius: 5px;\n\n  &:hover {\n    ${Name} {\n      opacity: 1;\n    }\n  }\n`;\n\nconst Series = ({ series }) => {\n  return (\n    <>\n      <Header>Seasons</Header>\n      <SeriesContainer>\n        {series.map((s) => (\n          <SeriesItem\n            key={s.id}\n            bgUrl={\n              s.poster_path\n                ? `https://image.tmdb.org/t/p/w300${s.poster_path}`\n                : \"https://kknd26.ru/images/no-photo-nevinka.png\"\n            }\n          >\n            <Name>{s.name}</Name>\n          </SeriesItem>\n        ))}\n      </SeriesContainer>\n    </>\n  );\n};\n\nSeries.propTypes = {\n  series: PropTypes.arrayOf(\n    PropTypes.shape({\n      air_date: PropTypes.string,\n      episode_count: PropTypes.number,\n      id: PropTypes.number,\n      name: PropTypes.string,\n      overview: PropTypes.string,\n      poster_path: PropTypes.string,\n      season_number: PropTypes.number,\n    })\n  ),\n};\n\nexport default Series;\n","import React from \"react\";\nimport { withRouter, Link, Switch, Route } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport styled, { keyframes } from \"styled-components\";\nimport Loader from \"Components/Loader\";\nimport Helmet from \"react-helmet\";\nimport Message from \"Components/Message\";\nimport Casting from \"Components/Casting\";\nimport Crews from \"Components/Crew\";\nimport Company from \"Components/Company\";\nimport Country from \"Components/Country\";\nimport Video from \"Components/Video\";\nimport Series from \"Components/Series\";\n\nconst Container = styled.div`\n  height: calc(100vh - 50px);\n  width: 100%;\n  position: relative;\n  padding: 50px;\n`;\n\nconst backdropAnim = keyframes`\n    0% {\n        opacity: 1;\n        filter: none;\n    }\n    60% {\n        opacity: 1;\n        filter: none;\n    }\n    100% {\n        opacity: 0.5;\n        filter: blur(10px);\n    }\n`;\n\nconst Backdrop = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-image: url(${(props) => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  filter: blur(3px);\n  opacity: 0.5;\n  animation-name: ${backdropAnim};\n  animation-duration: 3s;\n  animation-timing-function: ease-in-out;\n  animation-fill-mode: forwards;\n  z-index: -1;\n`;\n\nconst Content = styled.div`\n  display: flex;\n  position: relative;\n  width: 100%;\n  height: 100%;\n  z-index: 1;\n`;\n\nconst showAnim = keyframes`\n0% {\n    opacity: 0;\n}\n70% {\n    opacity: 0;\n}\n100% {\n    opacity: 1;\n}\n`;\n\nconst Cover = styled.div`\n  width: 30%;\n  background-image: url(${(props) => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  height: 100%;\n  border-radius: 5px;\n  animation-name: ${showAnim};\n  animation-duration: 3s;\n  animation-timing-function: ease-in-out;\n  animation-fill-mode: forwards;\n`;\n\nconst Data = styled.div`\n  width: 70%;\n  margin-left: 10px;\n  animation-name: ${showAnim};\n  animation-duration: 3s;\n  animation-timing-function: ease-in-out;\n  animation-fill-mode: forwards;\n`;\n\nconst Title = styled.h3`\n  font-size: 32px;\n`;\n\nconst MovieInfoContainer = styled.div`\n  margin: 40px 0px;\n  display: flex;\n  justify-content: start;\n  align-content: center;\n`;\n\nconst MovieInfomation = styled.span`\n  font-size: 16px;\n`;\n\nconst Divider = styled.span`\n  margin: 0 10px;\n`;\n\nconst Overview = styled.p`\n  font-size: 20px;\n  line-height: 1.5;\n  width: 70%;\n  opacity: 0.7;\n`;\n\nconst IMDB = styled.a`\n  margin-left: 10px;\n  width: 40px;\n  height: 25px;\n`;\n\nconst IMDBImg = styled.img`\n  margin: 0;\n  width: 40px;\n  height: 20px;\n`;\n\nconst TabContainer = styled.div`\n  width: 100%;\n  display: flex;\n  position: absolute;\n  bottom: 10px;\n  justify-content: center;\n`;\n\nconst Tab = styled(Link)`\n  border: 2px solid #e74c3c;\n  color: ${(props) => (props.current === \"true\" ? \"white\" : \"#e74c3c\")};\n  background-color: ${(props) =>\n    props.current === \"true\" ? \"#e74c3c\" : \"transparent\"};\n  width: 120px;\n  height: 40px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 15px;\n  margin-top: 50px;\n  border-radius: 10px;\n  border-left: 2px solid #e74c3c;\n  transition: 0.3s ease-in-out;\n\n  :not(:last-child) {\n    margin-right: 20px;\n  }\n\n  &:hover {\n    color: white;\n    background-color: #e74c3c;\n  }\n`;\n\nconst DetailPresenter = ({\n  location,\n  match,\n  result,\n  loading,\n  error,\n  credit,\n}) => {\n  return loading ? (\n    <>\n      <Helmet>\n        <title>Loading | Hyeokflix</title>\n      </Helmet>\n      <Loader />\n    </>\n  ) : error ? (\n    <Message color=\"#e743c3\" text={error}></Message>\n  ) : (\n    <Container>\n      <Helmet>\n        <title>\n          {result.original_title ? result.original_title : result.original_name}{\" \"}\n          | Hyeokflix\n        </title>\n      </Helmet>\n      <Backdrop\n        bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`}\n      />\n      <Content>\n        <Cover\n          bgImage={\n            result.poster_path\n              ? `https://image.tmdb.org/t/p/original${result.poster_path}`\n              : require(\"../../assets/noPosterSmall.png\")\n          }\n        />\n        <Data>\n          <Title>\n            {result.original_title\n              ? result.original_title\n              : result.original_name}\n          </Title>\n          <MovieInfoContainer>\n            <MovieInfomation>\n              {result.release_date\n                ? result.release_date.substring(0, 4)\n                : result.first_air_date.substring(0, 4)}\n            </MovieInfomation>\n            <Divider>•</Divider>\n            <MovieInfomation>\n              {result.runtime ? result.runtime : result.episode_run_time}min\n            </MovieInfomation>\n            <Divider>•</Divider>\n            <MovieInfomation>\n              {result.genres &&\n                result.genres.map((genre, index) =>\n                  index === result.genres.length - 1\n                    ? genre.name\n                    : `${genre.name}/`\n                )}\n            </MovieInfomation>\n            {result.imdb_id ? (\n              <IMDB href={`https://www.imdb.com/title/${result.imdb_id}`}>\n                <IMDBImg src=\"https://www.fixinthemix.com/wp-content/uploads/2015/08/IMDb.png\"></IMDBImg>\n              </IMDB>\n            ) : null}\n          </MovieInfoContainer>\n          <Overview>{result.overview}</Overview>\n        </Data>\n        <TabContainer>\n          <Tab\n            current={location.pathname.includes(\"/video\").toString()}\n            to={match.url + \"/video\"}\n          >\n            Trailer\n          </Tab>\n          <Tab\n            current={location.pathname.includes(\"/information\").toString()}\n            to={match.url + \"/information\"}\n          >\n            More\n          </Tab>\n          {result.original_name && (\n            <Tab\n              current={location.pathname.includes(\"/series\").toString()}\n              to={match.url + \"/series\"}\n            >\n              Series\n            </Tab>\n          )}\n        </TabContainer>\n      </Content>\n      <Switch>\n        <Route path={`/movie/:id/video`} exact>\n          {result.videos.results.map((vid) => (\n            <Video key={vid.key} videoKey={vid.key} />\n          ))}\n        </Route>\n        <Route path={`/tv/:id/video`} exact>\n          {result.videos.results.map((vid) => (\n            <Video key={vid.key} videoKey={vid.key} />\n          ))}\n        </Route>\n        <Route path={`/movie/:id/information`} exact>\n          {credit.cast && credit.cast.length > 0 && (\n            <Casting casts={credit.cast} />\n          )}\n          {result.original_name && credit.crew && credit.crew.length > 0 && (\n            <Crews crews={credit.crew} />\n          )}\n          {result.production_companies &&\n            result.production_companies.length > 0 && (\n              <Company companies={result.production_companies} />\n            )}\n          {result.production_countries &&\n            result.production_countries.length > 0 && (\n              <Country countries={result.production_countries} />\n            )}\n        </Route>\n        <Route path={`/tv/:id/information`} exact>\n          {credit.cast && credit.cast.length > 0 && (\n            <Casting casts={credit.cast} />\n          )}\n          {result.original_name && credit.crew && credit.crew.length > 0 && (\n            <Crews crews={credit.crew} />\n          )}\n          {result.production_companies &&\n            result.production_companies.length > 0 && (\n              <Company companies={result.production_companies} />\n            )}\n          {result.production_countries &&\n            result.production_countries.length > 0 && (\n              <Country countries={result.production_countries} />\n            )}\n        </Route>\n        {result.original_name && result.seasons && (\n          <Route path={`/tv/:id/series`} exact>\n            <Series series={result.seasons} />\n          </Route>\n        )}\n      </Switch>\n    </Container>\n  );\n};\n\nDetailPresenter.propTypes = {\n  result: PropTypes.object,\n  loading: PropTypes.bool.isRequired,\n  credit: PropTypes.object,\n  error: PropTypes.string,\n};\n\nexport default withRouter(DetailPresenter);\n","import DetailContainer from \"./DetailContainer\";\n\nexport default DetailContainer;\n","import { moviesApi, tvApi } from \"api\";\nimport React from \"react\";\nimport DetailPresenter from \"./DetailPresenter\";\n\nexport default class extends React.Component {\n  //Class로 만들어서 사용\n  constructor(props) {\n    super(props);\n\n    const {\n      location: { pathname },\n    } = props;\n\n    this.state = {\n      result: null, // id를 가지고 있다면 tv, movie 상관 없이 result를 가지게 만들기 위해\n      error: null,\n      credit: null,\n      loading: true,\n      isMovie: pathname.includes(\"/movie/\"),\n      // 클래스를 만들어 state에 집어넣는 방법 = componentDidMount 내에서 this.isMovie로 정의하는 방법 => 두 가지 모두 클래스 전체에서 사용할 수 있게끔 해주는 방법\n    };\n  }\n\n  async componentDidMount() {\n    const {\n      match: {\n        params: { id }, // URL에서 id를 얻기 위해 props를 통해 id값에 접근\n      },\n      history: { push }, // string이 입력됐을 때 Home화면으로 push하기 위해\n    } = this.props;\n\n    const { isMovie } = this.state; // class 안의 isMovie\n    const parsedId = parseInt(id); // string인 URL의 ID를 number로 변환\n\n    if (isNaN(parsedId)) {\n      return push(\"/\"); //ID가 number가 아니면 Home화면으로 Push\n    }\n\n    let result = null;\n    let credit = null;\n\n    try {\n      if (isMovie) {\n        // movieDetail Api 호출을 하고 그 안에 있는 data에 접근\n        // const request = await moviesApi.movieDetail(parsedId);\n        // result = request.data;\n        const { data } = await moviesApi.movieDetail(parsedId);\n        const { data: creditData } = await moviesApi.credits(parsedId);\n        result = data;\n        credit = creditData;\n        // ({ data: result } = await moviesApi.movieDetail(parsedId));\n        // ({ data: creditData } = await moviesApi.credits(parsedId));\n      } else {\n        // showDetail Api 호출을 하고 그 안에 있는 data에 접근\n        // const request = await tvApi.showDetail(parsedId);\n        // result = request.data;\n        // ({ data: result } = await tvApi.showDetail(parsedId));\n        const { data } = await tvApi.showDetail(parsedId);\n        const { data: creditData } = await tvApi.credits(parsedId);\n        result = data;\n        credit = creditData;\n      }\n    } catch {\n      this.setState({ error: \"Can't find anything.\" });\n    } finally {\n      this.setState({ loading: false, result, credit });\n    }\n  }\n\n  render() {\n    const { result, error, loading, credit } = this.state; // object destructing\n    return (\n      <DetailPresenter\n        result={result}\n        error={error}\n        loading={loading}\n        credit={credit}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Link, withRouter } from \"react-router-dom\";\n\nconst Header = styled.header`\n  @font-face {\n    font-family: \"BMJUA\";\n    src: url(\"https://cdn.jsdelivr.net/gh/projectnoonnu/noonfonts_one@1.0/BMJUA.woff\")\n      format(\"woff\");\n    font-weight: normal;\n    font-style: normal;\n  }\n\n  color: white;\n  position: fixed;\n  top: 0px;\n  left: 0px;\n  width: 100%;\n  height: 50px;\n  display: flex;\n  align-items: center;\n  background-color: rgba(20, 20, 20, 0.8);\n  z-index: 15;\n  box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.8);\n`;\nconst List = styled.ul`\n  display: flex;\n`;\nconst Item = styled.li`\n  width: 80px;\n  height: 50px;\n  text-align: center;\n  border-bottom: 3px solid\n    ${(props) => (props.current ? \"#eb2f06\" : \"transparent\")};\n  transition: border-bottom 0.2s ease-in-out;\n`;\nconst SLink = styled(Link)`\n  &.appName {\n    margin-right: 15px;\n    padding: 10px;\n    /* background-color: #eb2f06; */\n    font-size: 24px;\n    font-weight: bold;\n    font-family: \"BMJUA\";\n    color: #eb2f06;\n  }\n  height: 50px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport default withRouter(({ location: { pathname } }) => (\n  <Header>\n    <List>\n      <SLink to=\"/\" className=\"appName\">\n        HyeokFlix\n      </SLink>\n      <Item current={pathname === \"/\"}>\n        <SLink to=\"/\">Movies</SLink>\n      </Item>\n      <Item current={pathname === \"/tv\"}>\n        <SLink to=\"/tv\">TV</SLink>\n      </Item>\n      <Item current={pathname === \"/search\"}>\n        <SLink to=\"/search\">Search</SLink>\n      </Item>\n    </List>\n  </Header>\n));\n","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n  Switch,\n} from \"react-router-dom\";\nimport Home from \"Routes/Home\";\nimport Search from \"Routes/Search\";\nimport TV from \"Routes/TV\";\nimport Detail from \"Routes/Detail\";\nimport Header from \"Components/Header\";\n\nexport default () => (\n  <Router>\n    <>\n      <Header />\n      <Switch>\n        <Route path=\"/\" exact component={Home} />\n        <Route path=\"/search\" exact component={Search} />\n        <Route path=\"/tv\" exact component={TV} />\n        <Route path=\"/movie/:id\" component={Detail} />\n        <Route path=\"/tv/:id\" component={Detail} />\n        <Redirect from=\"*\" to=\"/\" />\n      </Switch>\n    </>\n  </Router>\n);\n","import { createGlobalStyle } from \"styled-components\";\nimport { reset } from \"styled-reset\";\n\nconst globalStyles = createGlobalStyle`\n  ${reset}\n  a {\n    text-decoration: none;\n    color: inherit;\n  }\n  * {\n    box-sizing: border-box;\n  }\n  body {\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n    font-size: 12px;\n    background-color: rgba(20,20,20,1);\n    color: white;\n    padding-top: 50px;\n  }\n`;\n\nexport default globalStyles;\n","import React, { Component } from \"react\";\nimport Router from \"Components/Router\";\nimport GlobalStyles from \"./GlobalStyles\";\n\nclass App extends Component {\n  render() {\n    return (\n      <>\n        <Router />\n        <GlobalStyles />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"Components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}